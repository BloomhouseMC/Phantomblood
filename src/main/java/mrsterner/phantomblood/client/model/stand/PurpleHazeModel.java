// Made with Model Converter by Globox_Z
// Generate all required imports
package mrsterner.phantomblood.client.model.stand;
import net.minecraft.client.model.*;
import net.minecraft.client.render.VertexConsumer;
import net.minecraft.client.render.entity.model.EntityModel;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.entity.LivingEntity;
import net.minecraft.util.math.MathHelper;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
public class PurpleHazeModel extends EntityModel<LivingEntity> {
    private final ModelPart head;
    private final ModelPart bone;
    private final ModelPart head_r1;
    private final ModelPart head_r2;
    private final ModelPart head_r3;
    private final ModelPart head_r4;
    private final ModelPart head_r5;
    private final ModelPart head_r6;
    private final ModelPart bone4;
    private final ModelPart head_r7;
    private final ModelPart bone2;
    private final ModelPart bone3;
    private final ModelPart body;
    private final ModelPart torsoplate_r1;
    private final ModelPart spike;
    private final ModelPart spike2;
    private final ModelPart spike3;
    private final ModelPart lower;
    private final ModelPart belt_r1;
    private final ModelPart abs_r1;
    private final ModelPart right;
    private final ModelPart rightUpper_r1;
    private final ModelPart rightLower;
    private final ModelPart left;
    private final ModelPart leftUpper_r1;
    private final ModelPart leftLower;
    private final ModelPart leftLower_r1;
    private final ModelPart upper;
    private final ModelPart leftArm;
    private final ModelPart arm;
    private final ModelPart hand;
    private final ModelPart hand_r1;
    private final ModelPart rightArm;
    private final ModelPart shoulder_r1;
    private final ModelPart shoulder_r2;
    private final ModelPart arm2;
    private final ModelPart arm_r1;
    private final ModelPart hand2;
    private final ModelPart hand_r2;
    private final ModelPart glass;
    private final ModelPart bone5;
    private final ModelPart bone7;
    private final ModelPart bone8;
    private final ModelPart punch;
    private final ModelPart leftPunch;
    private final ModelPart hand3;
    private final ModelPart hand4;
    private final ModelPart hand5;
    private final ModelPart rightPunch;
    private final ModelPart hand6;
    private final ModelPart hand7;
    private final ModelPart hand8;
    private final ModelPart bodyPunch;
    private final ModelPart torsoplate_r2;
    private final ModelPart spike4;
    private final ModelPart spike5;
    private final ModelPart spike6;
    private final ModelPart lower2;
    private final ModelPart belt_r2;
    private final ModelPart abs_r2;
    private final ModelPart right2;
    private final ModelPart rightUpper_r2;
    private final ModelPart rightLower2;
    private final ModelPart left2;
    private final ModelPart leftUpper_r2;
    private final ModelPart leftLower2;
    private final ModelPart leftLower_r2;
    private final ModelPart upper2;
    private final ModelPart leftArm2;
    private final ModelPart rightArm2;
    private final ModelPart shoulder_r3;
    private final ModelPart shoulder_r4;
    private double yOffset;
    public PurpleHazeModel(ModelPart root) {
        this.head = root.getChild("head");
        this.bone = this.head.getChild("bone");
        this.bone3 = this.bone.getChild("bone3");
        this.bone2 = this.bone.getChild("bone2");
        this.bone4 = this.bone.getChild("bone4");
        this.head_r7 = this.bone4.getChild("head_r7");
        this.head_r6 = this.bone.getChild("head_r6");
        this.head_r5 = this.bone.getChild("head_r5");
        this.head_r4 = this.bone.getChild("head_r4");
        this.head_r3 = this.bone.getChild("head_r3");
        this.head_r2 = this.bone.getChild("head_r2");
        this.head_r1 = this.bone.getChild("head_r1");
        this.body = root.getChild("body");
        this.upper = this.body.getChild("upper");
        this.rightArm = this.upper.getChild("rightArm");
        this.arm2 = this.rightArm.getChild("arm2");
        this.hand2 = this.arm2.getChild("hand2");
        this.hand_r2 = this.hand2.getChild("hand_r2");
        this.arm_r1 = this.arm2.getChild("arm_r1");
        this.shoulder_r2 = this.rightArm.getChild("shoulder_r2");
        this.shoulder_r1 = this.rightArm.getChild("shoulder_r1");
        this.leftArm = this.upper.getChild("leftArm");
        this.arm = this.leftArm.getChild("arm");
        this.hand = this.arm.getChild("hand");
        this.hand_r1 = this.hand.getChild("hand_r1");
        this.lower = this.body.getChild("lower");
        this.left = this.lower.getChild("left");
        this.leftLower = this.left.getChild("leftLower");
        this.leftLower_r1 = this.leftLower.getChild("leftLower_r1");
        this.leftUpper_r1 = this.left.getChild("leftUpper_r1");
        this.right = this.lower.getChild("right");
        this.rightLower = this.right.getChild("rightLower");
        this.rightUpper_r1 = this.right.getChild("rightUpper_r1");
        this.abs_r1 = this.lower.getChild("abs_r1");
        this.belt_r1 = this.lower.getChild("belt_r1");
        this.spike3 = this.body.getChild("spike3");
        this.spike2 = this.body.getChild("spike2");
        this.spike = this.body.getChild("spike");
        this.torsoplate_r1 = this.body.getChild("torsoplate_r1");
        this.glass = root.getChild("glass");
        this.bone5 = this.glass.getChild("bone5");
        this.bone8 = this.bone5.getChild("bone8");
        this.bone7 = this.bone5.getChild("bone7");
        this.punch = root.getChild("punch");
        this.rightPunch = this.punch.getChild("rightPunch");
        this.hand8 = this.rightPunch.getChild("hand8");
        this.hand7 = this.rightPunch.getChild("hand7");
        this.hand6 = this.rightPunch.getChild("hand6");
        this.leftPunch = this.punch.getChild("leftPunch");
        this.hand5 = this.leftPunch.getChild("hand5");
        this.hand4 = this.leftPunch.getChild("hand4");
        this.hand3 = this.leftPunch.getChild("hand3");
        this.bodyPunch = root.getChild("bodyPunch");
        this.upper2 = this.bodyPunch.getChild("upper2");
        this.rightArm2 = this.upper2.getChild("rightArm2");
        this.shoulder_r4 = this.rightArm2.getChild("shoulder_r4");
        this.shoulder_r3 = this.rightArm2.getChild("shoulder_r3");
        this.leftArm2 = this.upper2.getChild("leftArm2");
        this.lower2 = this.bodyPunch.getChild("lower2");
        this.left2 = this.lower2.getChild("left2");
        this.leftLower2 = this.left2.getChild("leftLower2");
        this.leftLower_r2 = this.leftLower2.getChild("leftLower_r2");
        this.leftUpper_r2 = this.left2.getChild("leftUpper_r2");
        this.right2 = this.lower2.getChild("right2");
        this.rightLower2 = this.right2.getChild("rightLower2");
        this.rightUpper_r2 = this.right2.getChild("rightUpper_r2");
        this.abs_r2 = this.lower2.getChild("abs_r2");
        this.belt_r2 = this.lower2.getChild("belt_r2");
        this.spike6 = this.bodyPunch.getChild("spike6");
        this.spike5 = this.bodyPunch.getChild("spike5");
        this.spike4 = this.bodyPunch.getChild("spike4");
        this.torsoplate_r2 = this.bodyPunch.getChild("torsoplate_r2");
        setRotationAngle(head, 1.0036F, 0.0F, 0.0F);
        setRotationAngle(head_r1, 0.0F, 0.0F, -0.5236F);
        setRotationAngle(head_r2, 0.3054F, 0.0F, 0.0F);
        setRotationAngle(head_r3, -0.6109F, 0.0F, 0.0F);
        setRotationAngle(head_r4, 0.0F, 0.0F, 0.5236F);
        setRotationAngle(head_r5, 0.0F, 0.3054F, 0.0F);
        setRotationAngle(head_r6, 0.0F, -0.3054F, 0.0F);
        setRotationAngle(bone4, -0.6981F, 0.0F, 0.0F);
        setRotationAngle(head_r7, -1.0036F, 0.0F, 0.0F);
        setRotationAngle(bone2, 0.0F, 0.6109F, 0.0F);
        setRotationAngle(bone3, 0.0F, -0.6109F, 0.0F);
        setRotationAngle(body, 0.5672F, 0.2618F, 0.0F);

        setRotationAngle(torsoplate_r1, 0.0873F, 0.0F, 0.0F);
        setRotationAngle(spike, 0.2182F, 0.0F, 0.0F);
        setRotationAngle(spike3, -0.2182F, 0.0F, 0.0F);
        setRotationAngle(lower, -0.7418F, 0.0F, 0.0F);
        setRotationAngle(belt_r1, 0.3491F, 0.0F, 0.0F);
        setRotationAngle(abs_r1, 0.1745F, 0.0F, 0.0F);
        setRotationAngle(right, -1.3526F, 0.2182F, 0.1745F);
        setRotationAngle(rightUpper_r1, -0.6545F, 0.0F, 0.0F);
        setRotationAngle(rightLower, 1.5272F, 0.0F, 0.0F);
        setRotationAngle(left, -1.1345F, -0.1745F, -0.3927F);
        setRotationAngle(leftUpper_r1, -0.4363F, 0.0F, 0.0F);
        setRotationAngle(leftLower, 1.3963F, 0.0F, 0.0F);
        setRotationAngle(leftLower_r1, 0.6109F, 0.0F, 0.0F);
        setRotationAngle(leftArm, -1.309F, -0.6545F, 0.0F);
        setRotationAngle(arm, 0.0F, 2.7925F, 0.0F);
        setRotationAngle(hand_r1, -1.0908F, 0.0F, 0.0F);
        setRotationAngle(rightArm, -1.309F, 0.3491F, 0.0F);
        setRotationAngle(shoulder_r1, 0.0F, -0.0873F, 0.0F);
        setRotationAngle(shoulder_r2, 0.0F, -0.0873F, 0.0F);
        setRotationAngle(arm_r1, 0.0F, -0.3054F, 0.0F);
        setRotationAngle(hand2, 0.0F, -0.6981F, -0.4363F);
        setRotationAngle(hand_r2, -0.3927F, -0.5672F, -0.0436F);
        setRotationAngle(glass, 1.0036F, 0.0F, 0.0F);
        setRotationAngle(bone7, 0.0F, 0.6109F, 0.0F);
        setRotationAngle(bone8, 0.0F, -0.6109F, 0.0F);
        setRotationAngle(hand3, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand4, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand5, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand6, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand7, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand8, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(bodyPunch, 0.5672F, 0.2618F, 0.0F);
        setRotationAngle(torsoplate_r2, 0.0873F, 0.0F, 0.0F);
        setRotationAngle(spike4, 0.2182F, 0.0F, 0.0F);
        setRotationAngle(spike6, -0.2182F, 0.0F, 0.0F);
        setRotationAngle(lower2, -0.7418F, 0.0F, 0.0F);
        setRotationAngle(belt_r2, 0.3491F, 0.0F, 0.0F);
        setRotationAngle(abs_r2, 0.1745F, 0.0F, 0.0F);
        setRotationAngle(right2, -1.3526F, 0.2182F, 0.1745F);
        setRotationAngle(rightUpper_r2, -0.6545F, 0.0F, 0.0F);
        setRotationAngle(rightLower2, 1.5272F, 0.0F, 0.0F);
        setRotationAngle(left2, -1.1345F, -0.1745F, -0.3927F);
        setRotationAngle(leftUpper_r2, -0.4363F, 0.0F, 0.0F);
        setRotationAngle(leftLower2, 1.3963F, 0.0F, 0.0F);
        setRotationAngle(leftLower_r2, 0.6109F, 0.0F, 0.0F);
        setRotationAngle(leftArm2, -1.309F, -0.6545F, 0.0F);
        setRotationAngle(rightArm2, -1.309F, 0.3491F, 0.0F);
        setRotationAngle(shoulder_r3, 0.0F, -0.0873F, 0.0F);
        setRotationAngle(shoulder_r4, 0.0F, -0.0873F, 0.0F);
    }
    public static TexturedModelData getTexturedModelData() {
        ModelData modelData = new ModelData();
        ModelPartData modelPartData = modelData.getRoot();
/*
        setRotationAngle(head, 1.0036F, 0.0F, 0.0F);
        setRotationAngle(head_r1, 0.0F, 0.0F, -0.5236F);
        setRotationAngle(head_r2, 0.3054F, 0.0F, 0.0F);
        setRotationAngle(head_r3, -0.6109F, 0.0F, 0.0F);
        setRotationAngle(head_r4, 0.0F, 0.0F, 0.5236F);
        setRotationAngle(head_r5, 0.0F, 0.3054F, 0.0F);
        setRotationAngle(head_r6, 0.0F, -0.3054F, 0.0F);
        setRotationAngle(bone4, -0.6981F, 0.0F, 0.0F);
        setRotationAngle(head_r7, -1.0036F, 0.0F, 0.0F);
        setRotationAngle(bone2, 0.0F, 0.6109F, 0.0F);
        setRotationAngle(bone3, 0.0F, -0.6109F, 0.0F);
        setRotationAngle(body, 0.5672F, 0.2618F, 0.0F);

 */
        ModelPartData modelPartData1 = modelPartData.addChild("head", ModelPartBuilder.create().uv(0,0).cuboid(-3.5F, -7.0F, -4.0F, 7.0F, 7.0F, 8.0F), ModelTransform.pivot(0.0F,-5.0F,0.0F));
        ModelPartData modelPartData2 = modelPartData1.addChild("bone", ModelPartBuilder.create().uv(0,15).cuboid(-4.0F, -1.0F, -3.5F, 8.0F, 3.0F, 7.0F).uv(23,15).cuboid(-4.0F, -1.0F, 3.0F, 8.0F, 3.0F, 1.0F, new Dilation(-0.01F)).uv(45,21).cuboid(-0.5F, -1.5F, -6.501F, 1.0F, 1.0F, 9.0F).uv(65,35).cuboid(-0.5F, -3.5F, -1.501F, 1.0F, 2.0F, 4.0F).uv(23,19).cuboid(-0.5F, -3.5F, -3.501F, 1.0F, 1.0F, 2.0F), ModelTransform.pivot(0.0F,-6.5F,0.0F));
        modelPartData2.addChild("head_r1", ModelPartBuilder.create().uv(35,31).cuboid(-1.0F, 0.0F, -5.5F, 1.0F, 1.0F, 10.0F), ModelTransform.pivot(-0.5F,-1.5F,-1.0F));
        modelPartData2.addChild("head_r2", ModelPartBuilder.create().uv(18,36).cuboid(-0.5F, 0.0F, -2.001F, 1.0F, 1.0F, 2.0F, new Dilation(-0.001F)), ModelTransform.pivot(0.0F,-3.5F,-3.5F));
        modelPartData2.addChild("head_r3", ModelPartBuilder.create().uv(0,0).cuboid(-0.5F, 0.0F, -0.001F, 1.0F, 1.0F, 3.0F, new Dilation(-0.001F)), ModelTransform.pivot(0.0F,-3.5F,-2.5F));
        modelPartData2.addChild("head_r4", ModelPartBuilder.create().uv(0,36).cuboid(0.0F, 0.0F, -5.5F, 1.0F, 1.0F, 10.0F), ModelTransform.pivot(0.5F,-1.5F,-1.0F));
        modelPartData2.addChild("head_r5", ModelPartBuilder.create().uv(40,21).cuboid(-4.0F, 0.5F, -1.0F, 4.0F, 3.0F, 1.0F), ModelTransform.pivot(4.0F,-1.5F,4.0F));
        modelPartData2.addChild("head_r6", ModelPartBuilder.create().uv(32,42).cuboid(0.0F, 0.5F, -1.0F, 4.0F, 3.0F, 1.0F), ModelTransform.pivot(-4.0F,-1.5F,4.0F));
        ModelPartData modelPartData3 = modelPartData2.addChild("bone4", ModelPartBuilder.create().uv(32,64).cuboid(-0.5F, 0.0F, -0.001F, 1.0F, 2.0F, 4.0F, new Dilation(-0.001F)), ModelTransform.pivot(0.0F,-3.5F,2.5F));
        modelPartData3.addChild("head_r7", ModelPartBuilder.create().uv(22,64).cuboid(-0.5F, 0.0F, -0.001F, 1.0F, 2.0F, 4.0F, new Dilation(-0.001F)), ModelTransform.pivot(0.0F,0.0F,4.0F));
        modelPartData2.addChild("bone2", ModelPartBuilder.create().uv(45,0).cuboid(-1.0F, 2.499F, -6.0F, 1.0F, 1.0F, 3.0F).uv(39,58).cuboid(-2.0F, -0.499F, -6.0F, 2.0F, 3.0F, 6.0F), ModelTransform.pivot(4.0F,-0.5F,-3.5F));
        modelPartData2.addChild("bone3", ModelPartBuilder.create().uv(0,4).cuboid(0.0F, 2.499F, -6.0F, 1.0F, 1.0F, 3.0F).uv(56,21).cuboid(0.0F, -0.501F, -6.0F, 2.0F, 3.0F, 6.0F), ModelTransform.pivot(-4.0F,-0.5F,-3.5F));
        ModelPartData modelPartData4 = modelPartData.addChild("body", ModelPartBuilder.create().uv(0,25).cuboid(-4.0F, 0.0F, -2.0F, 8.0F, 7.0F, 4.0F).uv(61,12).cuboid(-3.5F, 0.5F, -2.5F, 7.0F, 4.0F, 1.0F), ModelTransform.pivot(0.0F,-5.0F,0.0F));
        modelPartData4.addChild("torsoplate_r1", ModelPartBuilder.create().uv(66,8).cuboid(-1.5F, -0.5F, -0.5F, 3.0F, 2.0F, 1.0F), ModelTransform.pivot(0.0F,5.0F,-1.9F));
        modelPartData4.addChild("spike", ModelPartBuilder.create().uv(22,5).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 2.0F, new Dilation(-0.2F)).uv(26,5).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 1.0F).uv(31,0).cuboid(-0.5F, -0.5F, -0.5F, 1.0F, 1.0F, 1.0F, new Dilation(0.2F)), ModelTransform.pivot(0.0F,1.5F,2.0F));
        modelPartData4.addChild("spike2", ModelPartBuilder.create().uv(0,18).cuboid(-0.5F, -0.5F, 2.5F, 1.0F, 1.0F, 2.0F, new Dilation(-0.2F)).uv(20,25).cuboid(-0.5F, -0.5F, 2.5F, 1.0F, 1.0F, 1.0F).uv(20,27).cuboid(-0.5F, -0.5F, 1.5F, 1.0F, 1.0F, 1.0F, new Dilation(0.2F)), ModelTransform.pivot(0.0F,3.5F,0.0F));
        modelPartData4.addChild("spike3", ModelPartBuilder.create().uv(0,27).cuboid(-0.5F, -0.5F, -0.5F, 1.0F, 1.0F, 1.0F, new Dilation(0.2F)).uv(0,15).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 2.0F, new Dilation(-0.2F)).uv(0,25).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F,5.5F,2.0F));
        ModelPartData modelPartData5 = modelPartData4.addChild("lower", ModelPartBuilder.create().uv(47,31).cuboid(-3.5F, 0.0F, -2.0F, 7.0F, 4.0F, 4.0F).uv(40,14).cuboid(-4.0F, 2.5F, -2.5F, 8.0F, 2.0F, 5.0F), ModelTransform.pivot(0.0F,7.0F,0.0F));
        modelPartData5.addChild("belt_r1", ModelPartBuilder.create().uv(29,54).cuboid(-3.5F, -0.5F, 2.0F, 7.0F, 9.0F, 1.0F).uv(19,34).cuboid(-4.0F, -1.5F, -2.5F, 8.0F, 2.0F, 5.0F, new Dilation(0.1F)), ModelTransform.pivot(0.0F,3.0F,0.0F));
        modelPartData5.addChild("abs_r1", ModelPartBuilder.create().uv(52,42).cuboid(-3.5F, -2.0F, -3.0F, 7.0F, 2.0F, 3.0F, new Dilation(-0.01F)), ModelTransform.pivot(0.0F,0.0F,1.0F));
        ModelPartData modelPartData6 = modelPartData5.addChild("right", ModelPartBuilder.create().uv(17,42).cuboid(-2.75F, -0.5F, -2.5F, 5.0F, 7.0F, 5.0F), ModelTransform.pivot(-2.25F,5.0F,0.0F));
        modelPartData6.addChild("rightUpper_r1", ModelPartBuilder.create().uv(14,63).cuboid(-1.5F, -1.5F, -2.0F, 3.0F, 2.0F, 3.0F), ModelTransform.pivot(-0.25F,7.5F,-1.5F));
        modelPartData6.addChild("rightLower", ModelPartBuilder.create().uv(25,20).cuboid(-2.5F, -1.5F, -1.5F, 5.0F, 9.0F, 5.0F, new Dilation(-0.2F)), ModelTransform.pivot(-0.25F,6.5F,0.0F));
        ModelPartData modelPartData7 = modelPartData5.addChild("left", ModelPartBuilder.create().uv(37,42).cuboid(-2.0F, -0.5F, -2.5F, 5.0F, 7.0F, 5.0F), ModelTransform.pivot(2.0F,5.0F,0.0F));
        modelPartData7.addChild("leftUpper_r1", ModelPartBuilder.create().uv(22,0).cuboid(-1.5F, -2.0F, -1.0F, 3.0F, 2.0F, 3.0F), ModelTransform.pivot(0.5F,7.5F,-1.5F));
        ModelPartData modelPartData8 = modelPartData7.addChild("leftLower", ModelPartBuilder.create(), ModelTransform.pivot(0.5F,5.5F,0.0F));
        modelPartData8.addChild("leftLower_r1", ModelPartBuilder.create().uv(30,0).cuboid(-2.5F, -0.5F, -2.5F, 5.0F, 9.0F, 5.0F, new Dilation(-0.2F)), ModelTransform.pivot(0.0F,0.0F,0.0F));
        ModelPartData modelPartData9 = modelPartData4.addChild("upper", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,5.0F,0.0F));
        ModelPartData modelPartData10 = modelPartData9.addChild("leftArm", ModelPartBuilder.create().uv(11,54).cuboid(-1.0F, -3.0F, -2.5F, 4.0F, 4.0F, 5.0F).uv(0,77).cuboid(-0.5F, -3.5F, -3.0F, 4.0F, 4.0F, 5.0F), ModelTransform.pivot(5.0F,-2.0F,-1.0F));
        ModelPartData modelPartData11 = modelPartData10.addChild("arm", ModelPartBuilder.create().uv(0,59).cuboid(-1.5F, 0.0F, -2.0F, 3.0F, 4.0F, 4.0F), ModelTransform.pivot(1.0F,1.0F,0.0F));
        ModelPartData modelPartData12 = modelPartData11.addChild("hand", ModelPartBuilder.create(), ModelTransform.pivot(-6.0F,1.0F,0.0F));
        modelPartData12.addChild("hand_r1", ModelPartBuilder.create().uv(4,40).cuboid(-1.0F, -3.0F, -1.0F, 2.0F, 1.0F, 2.0F).uv(50,0).cuboid(-2.0F, -2.0F, -2.0F, 4.0F, 8.0F, 4.0F), ModelTransform.pivot(6.0F,3.0F,0.0F));
        ModelPartData modelPartData13 = modelPartData9.addChild("rightArm", ModelPartBuilder.create(), ModelTransform.pivot(-4.0F,-2.0F,-2.0F));
        modelPartData13.addChild("shoulder_r1", ModelPartBuilder.create().uv(0,68).cuboid(0.5F, -2.5F, -3.5F, 4.0F, 4.0F, 5.0F), ModelTransform.pivot(-5.0F,-1.0F,0.0F));
        modelPartData13.addChild("shoulder_r2", ModelPartBuilder.create().uv(52,49).cuboid(-4.0F, -2.0F, -2.5F, 4.0F, 4.0F, 5.0F), ModelTransform.pivot(0.0F,-1.0F,0.0F));
        ModelPartData modelPartData14 = modelPartData13.addChild("arm2", ModelPartBuilder.create(), ModelTransform.pivot(4.0F,2.0F,0.0F));
        modelPartData14.addChild("arm_r1", ModelPartBuilder.create().uv(55,58).cuboid(-1.5F, 0.0F, -2.0F, 3.0F, 4.0F, 4.0F), ModelTransform.pivot(-6.0F,-1.0F,0.0F));
        ModelPartData modelPartData15 = modelPartData14.addChild("hand2", ModelPartBuilder.create(), ModelTransform.pivot(-6.0F,3.75F,0.0F));
        modelPartData15.addChild("hand_r2", ModelPartBuilder.create().uv(4,40).cuboid(-1.0F, -2.0F, -1.0F, 2.0F, 1.0F, 2.0F).uv(0,47).cuboid(-2.0F, -1.0F, -2.0F, 4.0F, 8.0F, 4.0F), ModelTransform.pivot(0.0F,-0.75F,0.0F));
        ModelPartData modelPartData16 = modelPartData.addChild("glass", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,-5.0F,0.0F));
        ModelPartData modelPartData17 = modelPartData16.addChild("bone5", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,-6.5F,0.0F));
        modelPartData17.addChild("bone7", ModelPartBuilder.create().uv(0,86).cuboid(-1.5F, 1.501F, -5.5F, 1.0F, 4.0F, 5.0F, new Dilation(-0.1F)), ModelTransform.pivot(4.0F,-0.5F,-3.5F));
        modelPartData17.addChild("bone8", ModelPartBuilder.create().uv(0,86).cuboid(0.5F, 1.499F, -5.5F, 1.0F, 4.0F, 5.0F, new Dilation(-0.1F)), ModelTransform.pivot(-4.0F,-0.5F,-3.5F));
        ModelPartData modelPartData18 = modelPartData.addChild("punch", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,0.0F,0.0F));
        ModelPartData modelPartData19 = modelPartData18.addChild("leftPunch", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,0.0F,0.0F));
        modelPartData19.addChild("hand3", ModelPartBuilder.create().uv(0,47).cuboid(-16.0F, -1.75F, -2.0F, 4.0F, 8.0F, 4.0F), ModelTransform.pivot(0.0F,3.75F,-2.0F));
        modelPartData19.addChild("hand4", ModelPartBuilder.create().uv(0,47).cuboid(-20.0F, -1.75F, -8.0F, 4.0F, 8.0F, 4.0F), ModelTransform.pivot(0.0F,3.75F,-2.0F));
        modelPartData19.addChild("hand5", ModelPartBuilder.create().uv(0,47).cuboid(-14.0F, -1.75F, -13.0F, 4.0F, 8.0F, 4.0F), ModelTransform.pivot(0.0F,3.75F,-2.0F));
        ModelPartData modelPartData20 = modelPartData18.addChild("rightPunch", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,0.0F,0.0F));
        modelPartData20.addChild("hand6", ModelPartBuilder.create().uv(0,47).cuboid(12.0F, -1.75F, -2.0F, 4.0F, 8.0F, 4.0F, true), ModelTransform.pivot(0.0F,3.75F,-2.0F));
        modelPartData20.addChild("hand7", ModelPartBuilder.create().uv(0,47).cuboid(16.0F, -1.75F, -8.0F, 4.0F, 8.0F, 4.0F, true), ModelTransform.pivot(0.0F,3.75F,-2.0F));
        modelPartData20.addChild("hand8", ModelPartBuilder.create().uv(0,47).cuboid(10.0F, -1.75F, -13.0F, 4.0F, 8.0F, 4.0F, true), ModelTransform.pivot(0.0F,3.75F,-2.0F));
        ModelPartData modelPartData21 = modelPartData.addChild("bodyPunch", ModelPartBuilder.create().uv(0,25).cuboid(-4.0F, 0.0F, -2.0F, 8.0F, 7.0F, 4.0F).uv(61,12).cuboid(-3.5F, 0.5F, -2.5F, 7.0F, 4.0F, 1.0F), ModelTransform.pivot(0.0F,-5.0F,0.0F));
        modelPartData21.addChild("torsoplate_r2", ModelPartBuilder.create().uv(66,8).cuboid(-1.5F, -0.5F, -0.5F, 3.0F, 2.0F, 1.0F), ModelTransform.pivot(0.0F,5.0F,-1.9F));
        modelPartData21.addChild("spike4", ModelPartBuilder.create().uv(22,5).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 2.0F, new Dilation(-0.2F)).uv(26,5).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 1.0F).uv(31,0).cuboid(-0.5F, -0.5F, -0.5F, 1.0F, 1.0F, 1.0F, new Dilation(0.2F)), ModelTransform.pivot(0.0F,1.5F,2.0F));
        modelPartData21.addChild("spike5", ModelPartBuilder.create().uv(0,18).cuboid(-0.5F, -0.5F, 2.5F, 1.0F, 1.0F, 2.0F, new Dilation(-0.2F)).uv(20,25).cuboid(-0.5F, -0.5F, 2.5F, 1.0F, 1.0F, 1.0F).uv(20,27).cuboid(-0.5F, -0.5F, 1.5F, 1.0F, 1.0F, 1.0F, new Dilation(0.2F)), ModelTransform.pivot(0.0F,3.5F,0.0F));
        modelPartData21.addChild("spike6", ModelPartBuilder.create().uv(0,27).cuboid(-0.5F, -0.5F, -0.5F, 1.0F, 1.0F, 1.0F, new Dilation(0.2F)).uv(0,15).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 2.0F, new Dilation(-0.2F)).uv(0,25).cuboid(-0.5F, -0.5F, 0.5F, 1.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F,5.5F,2.0F));
        ModelPartData modelPartData22 = modelPartData21.addChild("lower2", ModelPartBuilder.create().uv(47,31).cuboid(-3.5F, 0.0F, -2.0F, 7.0F, 4.0F, 4.0F).uv(40,14).cuboid(-4.0F, 2.5F, -2.5F, 8.0F, 2.0F, 5.0F), ModelTransform.pivot(0.0F,7.0F,0.0F));
        modelPartData22.addChild("belt_r2", ModelPartBuilder.create().uv(29,54).cuboid(-3.5F, -0.5F, 2.0F, 7.0F, 9.0F, 1.0F).uv(19,34).cuboid(-4.0F, -1.5F, -2.5F, 8.0F, 2.0F, 5.0F, new Dilation(0.1F)), ModelTransform.pivot(0.0F,3.0F,0.0F));
        modelPartData22.addChild("abs_r2", ModelPartBuilder.create().uv(52,42).cuboid(-3.5F, -2.0F, -3.0F, 7.0F, 2.0F, 3.0F, new Dilation(-0.01F)), ModelTransform.pivot(0.0F,0.0F,1.0F));
        ModelPartData modelPartData23 = modelPartData22.addChild("right2", ModelPartBuilder.create().uv(17,42).cuboid(-2.75F, -0.5F, -2.5F, 5.0F, 7.0F, 5.0F), ModelTransform.pivot(-2.25F,5.0F,0.0F));
        modelPartData23.addChild("rightUpper_r2", ModelPartBuilder.create().uv(14,63).cuboid(-1.5F, -1.5F, -2.0F, 3.0F, 2.0F, 3.0F), ModelTransform.pivot(-0.25F,7.5F,-1.5F));
        modelPartData23.addChild("rightLower2", ModelPartBuilder.create().uv(25,20).cuboid(-2.5F, -1.5F, -1.5F, 5.0F, 9.0F, 5.0F, new Dilation(-0.2F)), ModelTransform.pivot(-0.25F,6.5F,0.0F));
        ModelPartData modelPartData24 = modelPartData22.addChild("left2", ModelPartBuilder.create().uv(37,42).cuboid(-2.0F, -0.5F, -2.5F, 5.0F, 7.0F, 5.0F), ModelTransform.pivot(2.0F,5.0F,0.0F));
        modelPartData24.addChild("leftUpper_r2", ModelPartBuilder.create().uv(22,0).cuboid(-1.5F, -2.0F, -1.0F, 3.0F, 2.0F, 3.0F), ModelTransform.pivot(0.5F,7.5F,-1.5F));
        ModelPartData modelPartData25 = modelPartData24.addChild("leftLower2", ModelPartBuilder.create(), ModelTransform.pivot(0.5F,5.5F,0.0F));
        modelPartData25.addChild("leftLower_r2", ModelPartBuilder.create().uv(30,0).cuboid(-2.5F, -0.5F, -2.5F, 5.0F, 9.0F, 5.0F, new Dilation(-0.2F)), ModelTransform.pivot(0.0F,0.0F,0.0F));
        ModelPartData modelPartData26 = modelPartData21.addChild("upper2", ModelPartBuilder.create(), ModelTransform.pivot(0.0F,5.0F,0.0F));
        modelPartData26.addChild("leftArm2", ModelPartBuilder.create().uv(11,54).cuboid(-1.0F, -3.0F, -2.5F, 4.0F, 4.0F, 5.0F).uv(0,77).cuboid(-0.5F, -3.5F, -3.0F, 4.0F, 4.0F, 5.0F), ModelTransform.pivot(5.0F,-2.0F,-1.0F));
        ModelPartData modelPartData27 = modelPartData26.addChild("rightArm2", ModelPartBuilder.create(), ModelTransform.pivot(-4.0F,-2.0F,-2.0F));
        modelPartData27.addChild("shoulder_r3", ModelPartBuilder.create().uv(0,68).cuboid(0.5F, -2.5F, -3.5F, 4.0F, 4.0F, 5.0F), ModelTransform.pivot(-5.0F,-1.0F,0.0F));
        modelPartData27.addChild("shoulder_r4", ModelPartBuilder.create().uv(52,49).cuboid(-4.0F, -2.0F, -2.5F, 4.0F, 4.0F, 5.0F), ModelTransform.pivot(0.0F,-1.0F,0.0F));
        return TexturedModelData.of(modelData,128,128);
/*
        setRotationAngle(torsoplate_r1, 0.0873F, 0.0F, 0.0F);
        setRotationAngle(spike, 0.2182F, 0.0F, 0.0F);
        setRotationAngle(spike3, -0.2182F, 0.0F, 0.0F);
        setRotationAngle(lower, -0.7418F, 0.0F, 0.0F);
        setRotationAngle(belt_r1, 0.3491F, 0.0F, 0.0F);
        setRotationAngle(abs_r1, 0.1745F, 0.0F, 0.0F);
        setRotationAngle(right, -1.3526F, 0.2182F, 0.1745F);
        setRotationAngle(rightUpper_r1, -0.6545F, 0.0F, 0.0F);
        setRotationAngle(rightLower, 1.5272F, 0.0F, 0.0F);
        setRotationAngle(left, -1.1345F, -0.1745F, -0.3927F);
        setRotationAngle(leftUpper_r1, -0.4363F, 0.0F, 0.0F);
        setRotationAngle(leftLower, 1.3963F, 0.0F, 0.0F);
        setRotationAngle(leftLower_r1, 0.6109F, 0.0F, 0.0F);
        setRotationAngle(leftArm, -1.309F, -0.6545F, 0.0F);
        setRotationAngle(arm, 0.0F, 2.7925F, 0.0F);
        setRotationAngle(hand_r1, -1.0908F, 0.0F, 0.0F);
        setRotationAngle(rightArm, -1.309F, 0.3491F, 0.0F);
        setRotationAngle(shoulder_r1, 0.0F, -0.0873F, 0.0F);
        setRotationAngle(shoulder_r2, 0.0F, -0.0873F, 0.0F);
        setRotationAngle(arm_r1, 0.0F, -0.3054F, 0.0F);
        setRotationAngle(hand2, 0.0F, -0.6981F, -0.4363F);
        setRotationAngle(hand_r2, -0.3927F, -0.5672F, -0.0436F);
        setRotationAngle(glass, 1.0036F, 0.0F, 0.0F);
        setRotationAngle(bone7, 0.0F, 0.6109F, 0.0F);
        setRotationAngle(bone8, 0.0F, -0.6109F, 0.0F);
        setRotationAngle(hand3, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand4, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand5, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand6, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand7, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(hand8, -1.5708F, 0.0F, 0.0F);
        setRotationAngle(bodyPunch, 0.5672F, 0.2618F, 0.0F);
        setRotationAngle(torsoplate_r2, 0.0873F, 0.0F, 0.0F);
        setRotationAngle(spike4, 0.2182F, 0.0F, 0.0F);
        setRotationAngle(spike6, -0.2182F, 0.0F, 0.0F);
        setRotationAngle(lower2, -0.7418F, 0.0F, 0.0F);
        setRotationAngle(belt_r2, 0.3491F, 0.0F, 0.0F);
        setRotationAngle(abs_r2, 0.1745F, 0.0F, 0.0F);
        setRotationAngle(right2, -1.3526F, 0.2182F, 0.1745F);
        setRotationAngle(rightUpper_r2, -0.6545F, 0.0F, 0.0F);
        setRotationAngle(rightLower2, 1.5272F, 0.0F, 0.0F);
        setRotationAngle(left2, -1.1345F, -0.1745F, -0.3927F);
        setRotationAngle(leftUpper_r2, -0.4363F, 0.0F, 0.0F);
        setRotationAngle(leftLower2, 1.3963F, 0.0F, 0.0F);
        setRotationAngle(leftLower_r2, 0.6109F, 0.0F, 0.0F);
        setRotationAngle(leftArm2, -1.309F, -0.6545F, 0.0F);
        setRotationAngle(rightArm2, -1.309F, 0.3491F, 0.0F);
        setRotationAngle(shoulder_r3, 0.0F, -0.0873F, 0.0F);
        setRotationAngle(shoulder_r4, 0.0F, -0.0873F, 0.0F);

 */
    }
    @Override
    public void setAngles(LivingEntity entity, float limbAngle, float limbDistance, float animationProgress, float headYaw, float headPitch){
        this.yOffset = (double) MathHelper.cos((float)(0.1D * (double)animationProgress)) * 0.1D;
    }
    public void setAttackAngles(LivingEntity entity, float limbAngle, float limbDistance, float animationProgress, float headYaw, float headPitch){
        float power = 0.5F;
        float speed = 3.0F;
        this.yOffset = (double)MathHelper.cos((float)(0.1D * (double)animationProgress)) * 0.1D;
        this.hand3.yaw = MathHelper.cos(speed * animationProgress) * 1.2F * power;
        this.hand4.yaw = MathHelper.cos(speed * animationProgress + 1.0471976F) * 1.4F * power;
        this.hand5.yaw = MathHelper.cos(speed * animationProgress + (float)2.0943951023931953D) * 1.6F * power;
        this.hand6.yaw = MathHelper.cos(speed * animationProgress + (float)3.665191429188092D) * 1.2F * power;
        this.hand7.yaw = MathHelper.cos(speed * animationProgress + (float)6.283185307179586D) * 1.1F * power;
        this.hand8.yaw = MathHelper.cos(speed * animationProgress + (float)8.377580409572781D) * 1.4F * power;
        float r = (float)Math.random();
        float offysin = MathHelper.sin(r * speed * animationProgress) * power - 0.25F;
        float offycos = MathHelper.cos(r * speed * animationProgress) * power - 0.25F;
        this.hand3.pivotZ = offysin;
        this.hand4.pivotZ = offycos;
        this.hand5.pivotZ = offysin;
        this.hand6.pivotZ = offycos;
        this.hand7.pivotZ = offysin;
        this.hand8.pivotZ = offycos;
    }
    @Override
    public void render(MatrixStack matrixStack, VertexConsumer	buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
        matrixStack.translate(-0.5D, this.yOffset - 0.2D, 0.5D);
        this.head.render(matrixStack, buffer, packedLight, packedOverlay, red, green, blue, alpha);
        this.body.render(matrixStack, buffer, packedLight, packedOverlay, red, green, blue, alpha);
    }
    public void renderGlass(MatrixStack matrixStack, VertexConsumer	buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
        //matrixStack.translate(-0.45D, this.yOffset - 0.2D, 0.45D);
        this.glass.render(matrixStack, buffer, packedLight, packedOverlay);
    }
    public void renderAttack(MatrixStack matrixStack, VertexConsumer	buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
        matrixStack.translate(0.0D, this.yOffset - 0.2D, -0.75D);
        head.render(matrixStack, buffer, packedLight, packedOverlay);
        bodyPunch.render(matrixStack, buffer, packedLight, packedOverlay);
        matrixStack.translate(0.0D, -this.yOffset, 0.0D);
        punch.render(matrixStack, buffer, packedLight, packedOverlay);
    }
    public void renderAttackGlass(MatrixStack matrixStack, VertexConsumer	buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
        matrixStack.translate(0.0D, this.yOffset, 0.0D);
        this.glass.render(matrixStack, buffer, packedLight, packedOverlay);
    }
    public final void renderPunchyArms(@NotNull MatrixStack matrices, @NotNull VertexConsumer vertices, int light, int overlay, float red, float green, float blue, float alpha) {
        this.rightPunch.render(matrices, vertices, light, overlay, red, green, blue, alpha);
        this.leftPunch.render(matrices, vertices, light, overlay, red, green, blue, alpha);
    }
    public void setRotationAngle(ModelPart bone, float x, float y, float z) {
        bone.pitch = x;
        bone.yaw = y;
        bone.roll = z;
    }
}
